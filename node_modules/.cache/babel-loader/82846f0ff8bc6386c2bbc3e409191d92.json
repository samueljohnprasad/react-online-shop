{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBM1sl4G7gqtSgrGK6PzWMQuivsf1ieMeA\",\n  authDomain: \"crwn-db-2d567.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-2d567.firebaseio.com\",\n  projectId: \"crwn-db-2d567\",\n  storageBucket: \"crwn-db-2d567.appspot.com\",\n  messagingSenderId: \"680803946981\",\n  appId: \"1:680803946981:web:b4f5219686794a67f2df0c\",\n  measurementId: \"G-8496BNRWT5\"\n};\nexport const createUserProfileDocument = async (userAuth, aditionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...aditionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return user;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/samueljohnprasad/Desktop/react/online-shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","aditionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","user","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,WAAW,EAAE,sCAHJ;AAITC,EAAAA,SAAS,EAAE,eAJF;AAKTC,EAAAA,aAAa,EAAE,2BALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWE,OAAO,MAAMC,yBAAyB,GAAE,OAAOC,QAAP,EAAgBC,aAAhB,KAAkC;AACxE,MAAG,CAACD,QAAJ,EAAa;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAd;AAEC,QAAMC,QAAQ,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAtB;;AAED,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBV,QAA1B;AACA,UAAMW,SAAS,GAAC,IAAIC,IAAJ,EAAhB;;AAGF,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAOD,KARD,CAQE,OAAMa,KAAN,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAED;AAED;;AAED,SAAOC,IAAP;AAEC,CA7BM;AA+BP7B,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAEA,OAAO,MAAM8B,IAAI,GAAE/B,QAAQ,CAAC+B,IAAT,EAAZ;AACP,OAAO,MAAMjB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMkB,QAAQ,GAAE,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAhB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAC,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA7B;AACP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config={\n    apiKey: \"AIzaSyBM1sl4G7gqtSgrGK6PzWMQuivsf1ieMeA\",\n    authDomain: \"crwn-db-2d567.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-2d567.firebaseio.com\",\n    projectId: \"crwn-db-2d567\",\n    storageBucket: \"crwn-db-2d567.appspot.com\",\n    messagingSenderId: \"680803946981\",\n    appId: \"1:680803946981:web:b4f5219686794a67f2df0c\",\n    measurementId: \"G-8496BNRWT5\"\n  };\n\n  export const createUserProfileDocument= async (userAuth,aditionalData) => {\n    if(!userAuth)return;\n\n   const userRef=firestore.doc(`user/${userAuth.uid}`)\n\n    const snapShot= await userRef.get();\n\n   if(!snapShot.exists){\n     const {displayName,email}=userAuth;\n     const createdAt=new Date();\n\n \n   try{\n     await userRef.set({\n       displayName,\n       email,\n       createdAt,\n       ...aditionalData\n\n     })\n   } catch(error){\n     console.log('error creating user', error.message)\n\n   } \n\n  }\n\n  return user\n\n  };\n\n  firebase.initializeApp(config);\n\n  export const auth= firebase.auth();\n  export const firestore=firebase.firestore();\n\n  const provider =new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({ prompt: 'select_account' });\n\n  export const signInWithGoogle=()=>  auth.signInWithPopup(provider)\n  export default firebase;"]},"metadata":{},"sourceType":"module"}